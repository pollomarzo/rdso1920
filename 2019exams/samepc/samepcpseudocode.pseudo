the point was that the reader who balances the numbers has to have a different
behavior from everyone else: otherwise, he takes the wrong number from the queue
try it if you want! remove the else in get and you will encounter the incorrect 
behavior.
the two solutions we thought of are here. the first one, in our opinion, looks
cleaner

monitor unlimited_buffer:
    int nw = 0, nr = 0;
    queue buffer;
    condition same_number;
    
    entry void put(T x):
        nw++;
        buffer.enqueue(x);
        
        if nw != nr:
            same_number.wait();
            
        same_number.signal();
        nw--;
        
    entry T get(void):
        nr++;
        if nw != nr: 
            same_number.wait();
        else:
            same_number.signal();
        
        T val = buffer.dequeue();

        same_number.signal();

        nr--;

        return val;


monitor unlimited_buffer:
    int nw = 0, nr = 0;
    stack buffer;
    condition same_number;
    
    entry void put(T x):
        nw++;
        buffer.enqueue(x);
        
        if nw != nr:
            same_number.wait();
            
        same_number.signal();
        nw--;
        
    entry T get(void):
        if nw == nr + 1:
            T val = buffer.prendidalfondo();
        else:
            nr++;
            same_number.wait();
            T val = buffer.prendidacima();

    same_number.signal();

    nr--;

    return val;
